setwd("~/refined_ssp6_paper/ssp6-paper/scripts")
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
View(tip_labels)
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
ggtree(small_hamburger_ssp6_tree)
ggtree(small_hamburger_ssp6_tree) + geom_tiplab()
View(tip_labels)
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=label))
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node))
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(0,1.6)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(0,8)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(0,7)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(0,6)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(0,5)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(0,5)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,8)
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
##test
flip_test<- ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
flip_test
##test
flip_test<- ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
flip_test
### flip tree
flip(flip_test, 11, 12)
?flip
ggtree(small_hamburger_ssp6_tree)
### flip tree
flip(ggtree(small_hamburger_ssp6_tree) , 11, 12)
##test
flip_test<- ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
flip_test
### flip tree
flip(ggtree(small_hamburger_ssp6_tree) , 13, 24) %>% flip(11, 12) %>% flip(10, 9)
##test
ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
### flip tree
flipped_tree <- flip(ggtree(small_hamburger_ssp6_tree) , 13, 24) %>% flip(11, 12) %>% flip(10, 9)
flip_test <- flipped_tree %<+% tip_labels + geom_text2(aes(label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
flip_test
### flip tree
flipped_tree <- flip(ggtree(small_hamburger_ssp6_tree) , 13, 24) %>% flip(11, 12) %>% flip(10, 9) %>% flip(7, 19)
flip_test <- flipped_tree %<+% tip_labels + geom_text2(aes(label=node),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
flip_test <- flipped_tree %<+% tip_labels + geom_text2(aes(subset = !isTip, label = label),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2) + xlim(-0.3,5)
flip_test
t4 <- flip_test %>% gheatmap(ssp6_tree_data, color = NULL, offset = 5, width = 0.5, colnames_offset_y = -1) + scale_fill_manual(values=c(col_vector)) + theme(legend.position = "none")
t4
t9 <- t3 %>% gheatmap(hmmer_ssp6_data, color = NULL, offset = 2, width = 0.2, colnames_offset_y = -1) +
scale_fill_gradient(low="#ffffff", high="#2980B9") +
theme(legend.title=element_text()) +
labs(fill="Hmmer score") +
geom_treescale(width = 2, offset = -0.4) +
ggsave("selected_hits_with_hmmer_score.png",dpi=300, width=16.53,height=11.69, units=c("in")) #+ theme(legend.position = "none")
### draw smaller set with genes alongside
f1 <- facet_plot(t4, panel='Operons',
mapping = aes(xmin = start, xmax = end, fill = gene, x=start, forward = direction, y=y),
data=new_data, geom=geom_gene_arrow, arrow_body_height = grid::unit(3, "mm"), arrowhead_height = grid::unit(4, "mm"), arrowhead_width = grid::unit(2,"mm")) +
scale_fill_manual(values=c(new_cols)) +
geom_treescale(width = 2, offset = -0.4) +
ggsave("smaller_set_ssp6with_operons.png",dpi=300, width=16.53,height=9, units=c("in"))
### legends for the species and genes separately:
#data frame for the operons in the tree - for the genes
operon_names <- as.data.frame(small_hamburger_ssp6_tree$tip.label)
colnames(operon_names) <- "name"
for_legend_plotting <- merge(operon_names,genes, by.x = "name", by.y = "operon")
for_legend_plotting$gene <- str_replace_all(for_legend_plotting$gene, "_", " ")
#plot species figure legend
l2 <- t3 %>% gheatmap(ssp6_tree_data, color = NULL, offset = 5, width = 0.5, colnames_offset_y = -1) +
scale_fill_manual(values=c(col_vector),name = "Species") +
guides(fill=guide_legend(override.aes=list(colour=NA),ncol=1,keywidth=0.3,
keyheight=0.3,
title="Species",
default.unit="inch")) +
theme(legend.position = "right",
legend.text = element_text(face = "italic"),
legend.title = element_text(),
legend.key = element_rect(size = 5),
legend.key.size = unit(1.5, 'lines'))
l2
####species legend for bigger tree
l3 <- t2 +
scale_fill_manual(values=c(col_vector),name = "Species") +
guides(fill=guide_legend(override.aes=list(colour=NA),ncol=2,keywidth=0.3,
keyheight=0.3,
title="Species",
default.unit="inch")) +
theme(legend.position = "right",
legend.title = element_text(),
legend.text = element_text(face = "italic"),
legend.key = element_rect(size = 5),
legend.key.size = unit(1.5, 'lines'))
l3
#plot genes figure legend
l1 <- ggplot(for_legend_plotting, aes(xmin = start, xmax = end, y = name, fill = gene, forward = direction)) +
geom_gene_arrow() +
scale_fill_manual(values=c(cols)) +
guides(fill=guide_legend(override.aes=list(colour=NA),ncol=2,keywidth=0.3,
keyheight=0.3,
title = "Gene",
default.unit="inch")) +
theme(legend.position = "right",
legend.title = element_text("Gene")) +
theme_genes()
legend_1 <- cowplot::get_legend(l1)
legend_2 <- cowplot::get_legend(l2)
legend_3 <- cowplot::get_legend(l3)
legend_4 <- cowplot::get_legend(t8)
ggdraw() +
draw_plot(legend_1, x = -0.1, y = 0.45, width = .5, height = .5) +
draw_plot(legend_2, x = .15, y = 0.45, width = .5, height = .5) +
draw_plot(legend_3, x = .5, y = 0.25, width = .5, height = .5) +
draw_plot(legend_4, x = -0.1, y = 0, width = .5, height = .5) +
ggsave("legends.png",dpi=300, width=10,height=8, units=c("in"))
### put in in the flipped tree
t4 <- flip_test %>% gheatmap(ssp6_tree_data, color = NULL, offset = 5, width = 0.5, colnames_offset_y = -1) + scale_fill_manual(values=c(col_vector)) + theme(legend.position = "none")
t4
### put in in the flipped tree
t4 <- flip_test %>% gheatmap(ssp6_tree_data, color = NULL, offset = 5, width = 0.5, colnames_offset_y = -1) + scale_fill_manual(values=c(col_vector)) + theme(legend.position = "none")
t4
t4
flip_test <- flipped_tree %<+% tip_labels + geom_text2(aes(subset = !isTip, label = label),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2)
t3 <- ggtree(small_hamburger_ssp6_tree)  %<+% tip_labels + geom_text2(aes(subset = !isTip, label=label),size = 3, nudge_x = -0.18, nudge_y = 0.15) + geom_tiplab(aes(label=label2),size=4,hjust=-0.02) + geom_rootedge(0.2)#+ geom_tiplab(size=2) #+ xlim(0,10) #+ xlim_tree(16)
### put in in the flipped tree
t4 <- flip_test %>% gheatmap(ssp6_tree_data, color = NULL, offset = 5, width = 0.5, colnames_offset_y = -1) + scale_fill_manual(values=c(col_vector)) + theme(legend.position = "none")
t4
t9 <- flip_test %>% gheatmap(hmmer_ssp6_data, color = NULL, offset = 2, width = 0.2, colnames_offset_y = -1) +
scale_fill_gradient(low="#ffffff", high="#2980B9") +
theme(legend.title=element_text()) +
labs(fill="Hmmer score") +
geom_treescale(width = 2, offset = -0.4) +
ggsave("selected_hits_with_hmmer_score.png",dpi=300, width=16.53,height=11.69, units=c("in")) #+ theme(legend.position = "none")
source('~/refined_ssp6_paper/ssp6-paper/scripts/Plotting_ssp6_figures.R', echo=TRUE)
t9 <- flip_test %>% gheatmap(hmmer_ssp6_data, color = NULL, offset = 2, width = 0.2, colnames_offset_y = -1) +
scale_fill_gradient(low="#ffffff", high="#2980B9") +
theme(legend.title=element_text()) +
labs(fill="Hmmer score") +
geom_treescale(width = 2, offset = -0.4) +
ggsave("selected_hits_with_hmmer_score.png",dpi=300, width=16.53,height=11.69, units=c("in")) #+ theme(legend.position = "none")
flip_test %>% gheatmap(hmmer_ssp6_data, color = NULL, offset = 2, width = 0.2, colnames_offset_y = -1) +
scale_fill_gradient(low="#ffffff", high="#2980B9") +
theme(legend.title=element_text()) +
labs(fill="Hmmer score") +
geom_treescale(width = 2, offset = -0.4)
t9 <- flip_test %>% gheatmap(hmmer_ssp6_data, color = NULL, offset = 2, width = 0.2, colnames_offset_y = -1) +
scale_fill_gradient(low="#ffffff", high="#2980B9") +
theme(legend.title=element_text()) +
labs(fill="Hmmer score") +
geom_treescale(width = 2, offset = -0.4) +
ggsave("selected_hits_with_hmmer_score.pdf",dpi=300, width=16.53,height=11.69, units=c("in")) #+ theme(legend.position = "none")
f1 <- facet_plot(t4, panel='Operons',
mapping = aes(xmin = start, xmax = end, fill = gene, x=start, forward = direction, y=y),
data=new_data, geom=geom_gene_arrow, arrow_body_height = grid::unit(3, "mm"), arrowhead_height = grid::unit(4, "mm"), arrowhead_width = grid::unit(2,"mm")) +
scale_fill_manual(values=c(new_cols)) +
geom_treescale(width = 2, offset = -0.4) +
ggsave("smaller_set_ssp6with_operons.pdf",dpi=300, width=16.53,height=9, units=c("in"))
